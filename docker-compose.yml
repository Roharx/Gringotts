version: "3.8"
services:
  apigateway:
    image: roharx/gringotts-deployment:apigateway-latest
    env_file:
      - .env
    ports:
      - "5000:8080"
    depends_on:
      - currencyservice
      - ledgerservice
      - transactionpublisher
      - transactionconsumer

  currencyservice:
    image: roharx/gringotts-deployment:currencyservice-latest
    env_file:
      - .env
    ports:
      - "5001:8080"

  ledgerservice:
    image: roharx/gringotts-deployment:ledgerservice-latest
    env_file:
      - .env
    ports:
      - "5002:8080"

  transactionpublisher:
    image: roharx/gringotts-deployment:transactionpublisher-latest
    env_file:
      - .env
    ports:
      - "5003:8080"

  transactionconsumer:
    image: roharx/gringotts-deployment:transactionconsumer-latest
    env_file:
      - .env
    ports:
      - "5004:8080"

  frontend:
    image: roharx/gringotts-deployment:frontend-latest
    ports:
      - "8100:80"
    restart: unless-stopped

  migrations:
    image: roharx/gringotts-deployment:migration-latest
    command: [ "/bin/sh", "-c", "./wait-for-it.sh db:5432 -- echo 'DB is ready' && dotnet Gringotts.Migration.dll" ]
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:1.49.0
    ports:
      - "16686:16686"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=yourpassword
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/dashboards/json:/etc/grafana/provisioning/dashboards/json

volumes:
  pgdata:
